{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkdlf\\\\Study\\\\SpringBoot\\\\front-end\\\\boot06\\\\src\\\\component\\\\webBoard\\\\WebBoardListComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../ApiService\";\nimport queryStirng from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WebBoardListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadWebBoardList = (page, size) => {\n      ApiService.fetchWebBoards(page, size).then(res => {\n        this.setState({\n          result: res.data,\n          prevPage: res.data.prevPage,\n          pageList: res.data.pageList,\n          boards: res.data.result.content\n        });\n      }).catch(err => {\n        console.log(\"reloadWebBoardList() Error!\", err);\n      });\n    };\n\n    const p = queryStirng.parse(props.location.search).page;\n    const _size = queryStirng.parse(props.location.search).size;\n    this.state = {\n      result: {},\n      // keyPoint\n      prevPage: {},\n      pageList: [],\n      // keyPoint\n      boards: [],\n      message: null,\n      page: p === undefined || p < 1 ? 1 : p,\n      size: _size === undefined || _size < 10 ? 10 : _size\n    };\n  }\n\n  componentDidMount() {\n    this.reloadWebBoardList(this.state.page, this.state.size);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"WebBoard List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Wirter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Regdate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Updatedate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.boards.map(board => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.bno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.writer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.regdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.updatedate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this)]\n            }, board.bno, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [true && true, this.state.pageList.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: page.pageNumber + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 53\n            }, this)\n          }, page.pageNumber + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 49\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WebBoardListComponent;","map":{"version":3,"sources":["C:/Users/qkdlf/Study/SpringBoot/front-end/boot06/src/component/webBoard/WebBoardListComponent.jsx"],"names":["React","Component","ApiService","queryStirng","WebBoardListComponent","constructor","props","reloadWebBoardList","page","size","fetchWebBoards","then","res","setState","result","data","prevPage","pageList","boards","content","catch","err","console","log","p","parse","location","search","state","message","undefined","componentDidMount","render","map","board","bno","title","writer","regdate","updatedate","pageNumber"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ApiService from \"../../ApiService\";\r\nimport queryStirng from 'query-string';\r\n\r\nclass WebBoardListComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const p = queryStirng.parse(props.location.search).page;\r\n        const size = queryStirng.parse(props.location.search).size;\r\n\r\n        this.state = {\r\n            result : {},      // keyPoint\r\n            prevPage : {},\r\n            pageList : [],      // keyPoint\r\n            boards : [],\r\n            message : null,\r\n            page : (p===undefined || p<1) ? 1 : p,\r\n            size : (size===undefined || size<10) ? 10 : size\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reloadWebBoardList(this.state.page, this.state.size);\r\n    }\r\n\r\n    reloadWebBoardList = (page, size)=>{\r\n        ApiService.fetchWebBoards(page, size).then(res=>{\r\n                                                    \r\n                                                    this.setState({\r\n                                                                    result : res.data,\r\n                                                                    prevPage : res.data.prevPage,\r\n                                                                    pageList : res.data.pageList,\r\n                                                                    boards:res.data.result.content\r\n                                                                    })\r\n\r\n                                        })\r\n                                        .catch(err=>{\r\n                                            console.log(\"reloadWebBoardList() Error!\",err);                        \r\n                                        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <h2>WebBoard List</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Bno</th>\r\n                            <th>Title</th>\r\n                            <th>Wirter</th>\r\n                            <th>Content</th>\r\n                            <th>Regdate</th>\r\n                            <th>Updatedate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.boards.map( board=>\r\n                                    <tr key={board.bno}>\r\n                                        <td>{board.bno}</td>\r\n                                        <td>{board.title}</td>\r\n                                        <td>{board.writer}</td>\r\n                                        <td>{board.content}</td>\r\n                                        <td>{board.regdate}</td>\r\n                                        <td>{board.updatedate}</td>\r\n                                    </tr>\r\n                                )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div>\r\n                {/* pagination */}\r\n                <ul>\r\n                    {\r\n                        true && true\r\n                    }\r\n                    {\r\n                        \r\n                        this.state.pageList.map(page => \r\n                                                <li key={page.pageNumber+1}>\r\n                                                    <a href=\"#\">{page.pageNumber+1}</a>\r\n                                                </li>\r\n                                                )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WebBoardListComponent;"]},"metadata":{},"sourceType":"module"}