{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkdlf\\\\Study\\\\SpringBoot\\\\front-end\\\\boot06\\\\src\\\\component\\\\webBoard\\\\WebBoardListComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../ApiService\";\nimport queryStirng from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WebBoardListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleWebBoardSubmit = () => {\n      const {\n        page,\n        size,\n        type,\n        keyword\n      } = this.state;\n      localStorage.setItem('page', page);\n      localStorage.setItem('size', size);\n      localStorage.setItem('type', type);\n      localStorage.setItem('keyword', keyword);\n    };\n\n    this.reloadWebBoardList = (page = 1, size = 10, type = \"\", keyword = \"\") => {\n      ApiService.fetchWebBoards(page, size, type, keyword).then(res => {\n        this.setState({\n          result: res.data,\n          prevPage: res.data.prevPage,\n          nextPage: res.data.nextPage,\n          pageList: res.data.pageList,\n          boards: res.data.result.content\n        });\n      }).catch(err => {\n        console.log(\"reloadWebBoardList() Error!\", err);\n      });\n    };\n\n    this.onChangePage = p => {\n      this.setState({\n        page: p\n      });\n      this.reloadWebBoardList(p, this.state.size, this.state.type, this.state.keyword);\n    };\n\n    this.onChangeType = e => {\n      this.setState({\n        type: e.target.value\n      });\n    };\n\n    this.onChangeKeyword = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.onClickSearch = () => {\n      this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\n    };\n\n    this.onClickRegister = () => {\n      this.props.history.push(\"/boards/register\");\n    };\n\n    this.onClickView = bno => {\n      this.props.history.push({\n        pathname: \"/boards/view\",\n        state: {\n          page: this.state.page,\n          size: this.state.size,\n          type: this.state.type,\n          keyword: this.state.keyword,\n          bno: bno\n        }\n      });\n    };\n\n    const _p = localStorage.getItem('page');\n\n    const s = localStorage.getItem('size');\n    const t = localStorage.getItem('type');\n    const k = localStorage.getItem('keyword');\n    const {\n      page: _page,\n      size: _size,\n      type: _type,\n      keyword: _keyword\n    } = localStorage;\n    console.log(\"page is \" + _page);\n    console.log(\"size is \" + _size);\n    console.log(\"type is \" + _type);\n    console.log(\"keyword is \" + _keyword);\n    this.state = {\n      result: null,\n      prevPage: null,\n      nextPage: null,\n      pageList: [],\n      boards: [],\n      page: _p === null ? 1 : _p,\n      size: s === null ? 10 : s,\n      type: t === null ? \"\" : t,\n      keyword: k === null ? \"\" : k\n    };\n  }\n\n  componentDidMount() {\n    this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\n  }\n\n  componentDidUpdate() {\n    this.handleWebBoardSubmit();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"WebBoard List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.onClickRegister();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Wirter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Regdate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Updatedate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.boards.map(board => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.bno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  this.onClickView(board.bno);\n                },\n                style: {\n                  cursor: 'pointer'\n                },\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.writer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.regdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.updatedate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this)]\n            }, board.bno, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"searchType\",\n            onChange: this.onChangeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"t\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"w\",\n              children: \"Writer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"c\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.onChangeKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onClickSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\n          /* PREV 버튼 */\n          this.state.prevPage === null ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(this.state.prevPage.pageNumber + 1);\n              },\n              children: [\"PREV \", this.state.prevPage.pageNumber + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 61\n          }, this),\n          /* 페이지 번호 버튼 */\n          this.state.pageList.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: this.state.result.currentPageNum - 1 === page.pageNumber ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(page.pageNumber + 1);\n              },\n              style: {\n                color: \"red\"\n              },\n              children: page.pageNumber + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 69\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(page.pageNumber + 1);\n              },\n              children: page.pageNumber + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 69\n            }, this)\n          }, page.pageNumber + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 57\n          }, this)),\n          /* NEXT 버튼 */\n          this.state.nextPage === null ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(this.state.nextPage.pageNumber + 1);\n              },\n              children: [\"NEXT \", this.state.nextPage.pageNumber + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WebBoardListComponent;","map":{"version":3,"sources":["C:/Users/qkdlf/Study/SpringBoot/front-end/boot06/src/component/webBoard/WebBoardListComponent.jsx"],"names":["React","Component","ApiService","queryStirng","WebBoardListComponent","constructor","props","handleWebBoardSubmit","page","size","type","keyword","state","localStorage","setItem","reloadWebBoardList","fetchWebBoards","then","res","setState","result","data","prevPage","nextPage","pageList","boards","content","catch","err","console","log","onChangePage","p","onChangeType","e","target","value","onChangeKeyword","onClickSearch","onClickRegister","history","push","onClickView","bno","pathname","getItem","s","t","k","componentDidMount","componentDidUpdate","render","map","board","cursor","title","writer","regdate","updatedate","pageNumber","currentPageNum","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ApiService from \"../../ApiService\";\r\nimport queryStirng from 'query-string';\r\n\r\nclass WebBoardListComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const p = localStorage.getItem('page');\r\n        const s = localStorage.getItem('size');\r\n        const t = localStorage.getItem('type');\r\n        const k = localStorage.getItem('keyword');\r\n\r\n        const {page,size,type,keyword} = localStorage;\r\n        console.log(\"page is \" + page);\r\n        console.log(\"size is \" + size);\r\n        console.log(\"type is \" + type);\r\n        console.log(\"keyword is \" + keyword);\r\n\r\n        this.state = {\r\n            result : null,      \r\n            prevPage : null,\r\n            nextPage : null,\r\n            pageList : [],\r\n            boards : [],\r\n            page : p===null ? 1 : p,\r\n            size : s===null ? 10 : s,\r\n            type : t===null ? \"\" : t,\r\n            keyword : k===null ? \"\" : k\r\n        }\r\n        \r\n    }\r\n\r\n    handleWebBoardSubmit = ()=>{\r\n        const {page, size, type, keyword} = this.state;\r\n        localStorage.setItem('page',page);\r\n        localStorage.setItem('size',size);\r\n        localStorage.setItem('type',type);\r\n        localStorage.setItem('keyword',keyword);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.handleWebBoardSubmit();\r\n    }\r\n\r\n    reloadWebBoardList = (page=1, size=10, type=\"\", keyword=\"\")=>{\r\n        ApiService.fetchWebBoards(page, size, type, keyword)\r\n                    .then(res=>{\r\n                        this.setState({\r\n                                        result : res.data,\r\n                                        prevPage : res.data.prevPage,\r\n                                        nextPage : res.data.nextPage,\r\n                                        pageList : res.data.pageList,\r\n                                        boards:res.data.result.content\r\n                                    })\r\n                    })\r\n                    .catch(err=>{console.log(\"reloadWebBoardList() Error!\",err);});\r\n    }\r\n\r\n    onChangePage = (p)=>{\r\n        this.setState({page : p});\r\n        this.reloadWebBoardList(p,this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n    onChangeType = (e)=>{\r\n        this.setState({type : e.target.value});\r\n    }\r\n    onChangeKeyword = (e)=>{\r\n        this.setState({keyword : e.target.value});\r\n    }\r\n    onClickSearch = ()=>{\r\n        this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n\r\n    onClickRegister = ()=>{\r\n        this.props.history.push(\"/boards/register\");\r\n    }\r\n\r\n    onClickView = (bno)=>{\r\n        this.props.history.push({\r\n            pathname : \"/boards/view\",\r\n            state : {\r\n                page : this.state.page,\r\n                size : this.state.size,\r\n                type : this.state.type,\r\n                keyword : this.state.keyword,\r\n                bno : bno\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <h2>WebBoard List</h2>\r\n                <div>\r\n                    <button onClick={()=>{this.onClickRegister()}}>Register</button>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Bno</th>\r\n                            <th>Title</th>\r\n                            <th>Wirter</th>\r\n                            <th>Content</th>\r\n                            <th>Regdate</th>\r\n                            <th>Updatedate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.boards.map( board=>\r\n                                    <tr key={board.bno}>\r\n                                        <td>{board.bno}</td>\r\n                                        <td onClick={()=>{this.onClickView(board.bno)}} style={{cursor:'pointer'}}>{board.title}</td>\r\n                                        <td>{board.writer}</td>\r\n                                        <td>{board.content}</td>\r\n                                        <td>{board.regdate}</td>\r\n                                        <td>{board.updatedate}</td>\r\n                                    </tr>\r\n                                )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* search */}\r\n                <div>\r\n                    <select name=\"searchType\" onChange={this.onChangeType}>\r\n                        <option value=\"\">--</option>\r\n                        <option value='t'>Title</option>\r\n                        <option value='w'>Writer</option>\r\n                        <option value='c'>Content</option>\r\n                    </select>\r\n                    <input type=\"text\" onChange={this.onChangeKeyword}/>\r\n                    <button onClick={this.onClickSearch}>Search</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {/* pagination */}\r\n                <ul>                 \r\n                    {\r\n                        /* PREV 버튼 */\r\n                        this.state.prevPage===null ? null : <li><button onClick={()=>{this.onChangePage(this.state.prevPage.pageNumber+1)}}>PREV {this.state.prevPage.pageNumber+1}</button></li>\r\n                    }\r\n                    {\r\n                        /* 페이지 번호 버튼 */\r\n                        this.state.pageList.map(page =>\r\n                                                        <li key={page.pageNumber+1}>\r\n                                                            {\r\n                                                                this.state.result.currentPageNum-1===page.pageNumber ? \r\n                                                                    <button onClick={()=>{this.onChangePage(page.pageNumber+1)}} style={{color:\"red\"}}>{page.pageNumber+1}</button>\r\n                                                                    :\r\n                                                                    <button onClick={()=>{this.onChangePage(page.pageNumber+1)}}>{page.pageNumber+1}</button>\r\n                                                                    \r\n                                                            }\r\n                                                        </li> \r\n                                                        \r\n                                                )\r\n                    }\r\n                    {\r\n                        /* NEXT 버튼 */\r\n                        this.state.nextPage===null ? null : <li><button onClick={()=>{this.onChangePage(this.state.nextPage.pageNumber+1)}}>NEXT {this.state.nextPage.pageNumber+1}</button></li>\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WebBoardListComponent;"]},"metadata":{},"sourceType":"module"}