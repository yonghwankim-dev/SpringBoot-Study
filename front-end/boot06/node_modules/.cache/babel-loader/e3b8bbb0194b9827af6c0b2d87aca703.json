{"ast":null,"code":"import { Component } from \"react\";\nimport ApiService from \"../../ApiService\";\nimport queryString from 'query-string';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WebBoardViewComponent extends Component {\n  constructor(props) {\n    super(props);\n    const query = queryString.parse(this.props.location.search);\n    this.state = {\n      page: query.page,\n      size: query.size,\n      type: query.type,\n      keyword: query.keyword,\n      bno: query.bno\n    };\n    console.log(this.state);\n  }\n\n  componentDidMount() {//this.reloadWebBoardView();\n  }\n\n  reloadWebBoardView(bno) {\n    ApiService.viewWebBoard(bno).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(\"viewWebBoard() error!\", err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"hello view\"\n    }, void 0, false);\n  }\n\n}\n\nexport default WebBoardViewComponent;","map":{"version":3,"sources":["C:/Users/qkdlf/Study/SpringBoot/front-end/boot06/src/component/webBoard/WebBoardViewComponent.jsx"],"names":["Component","ApiService","queryString","WebBoardViewComponent","constructor","props","query","parse","location","search","state","page","size","type","keyword","bno","console","log","componentDidMount","reloadWebBoardView","viewWebBoard","then","res","catch","err","render"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;;AAEA,MAAMC,qBAAN,SAAoCH,SAApC,CAA6C;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,UAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAAtC,CAAd;AAGA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAGL,KAAK,CAACK,IADJ;AAETC,MAAAA,IAAI,EAAGN,KAAK,CAACM,IAFJ;AAGTC,MAAAA,IAAI,EAAGP,KAAK,CAACO,IAHJ;AAITC,MAAAA,OAAO,EAAGR,KAAK,CAACQ,OAJP;AAKTC,MAAAA,GAAG,EAAGT,KAAK,CAACS;AALH,KAAb;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AAEH;;AAEDQ,EAAAA,iBAAiB,GAAE,CACf;AACH;;AAEDC,EAAAA,kBAAkB,CAACJ,GAAD,EAAK;AACnBd,IAAAA,UAAU,CAACmB,YAAX,CAAwBL,GAAxB,EACaM,IADb,CACkBC,GAAG,IAAE;AACPN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,KAHb,EAIaC,KAJb,CAImBC,GAAG,IAAE;AACRR,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCO,GAApC;AACH,KANb;AAOH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA,qBADJ;AAKH;;AAvCwC;;AA0C7C,eAAetB,qBAAf","sourcesContent":["import { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\nimport queryString from 'query-string';\r\n\r\nclass WebBoardViewComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const query = queryString.parse(this.props.location.search);\r\n        \r\n\r\n        this.state = {\r\n            page : query.page,\r\n            size : query.size,\r\n            type : query.type,\r\n            keyword : query.keyword,\r\n            bno : query.bno,\r\n        }\r\n\r\n        console.log(this.state);\r\n        \r\n    }\r\n\r\n    componentDidMount(){    \r\n        //this.reloadWebBoardView();\r\n    }\r\n    \r\n    reloadWebBoardView(bno){\r\n        ApiService.viewWebBoard(bno)\r\n                    .then(res=>{\r\n                        console.log(res);\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(\"viewWebBoard() error!\",err);\r\n                    })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n            hello view\r\n            </>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default WebBoardViewComponent;"]},"metadata":{},"sourceType":"module"}