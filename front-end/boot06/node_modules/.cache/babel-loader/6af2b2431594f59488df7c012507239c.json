{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qkdlf\\\\Study\\\\SpringBoot\\\\front-end\\\\boot06\\\\src\\\\component\\\\webBoard\\\\WebBoardListComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../ApiService\";\nimport queryStirng from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WebBoardListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadWebBoardList = (page = 1, size = 10, type = \"\", keyword = \"\") => {\n      ApiService.fetchWebBoards(page, size, type, keyword).then(res => {\n        this.setState({\n          result: res.data,\n          prevPage: res.data.prevPage,\n          nextPage: res.data.nextPage,\n          pageList: res.data.pageList,\n          boards: res.data.result.content\n        });\n      }).catch(err => {\n        console.log(\"reloadWebBoardList() Error!\", err);\n      });\n    };\n\n    this.onChangePage = p => {\n      this.setState({\n        page: p\n      });\n      this.reloadWebBoardList(p, this.state.size, this.state.type, this.state.keyword);\n    };\n\n    this.onChangeType = e => {\n      this.setState({\n        type: e.target.value\n      });\n    };\n\n    this.onChangeKeyword = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.onClickSearch = () => {\n      this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\n    };\n\n    this.onClickRegister = () => {\n      this.props.history.push(\"/boards/register\");\n    };\n\n    this.onClickView = bno => {\n      this.props.history.push(\"/boards/view\" + \"?page=\" + this.state.page + \"&size=\" + this.state.size + \"&type=\" + this.state.type + \"&keyword=\" + this.state.keyword + \"&bno=\" + bno);\n    };\n\n    const query = queryStirng.parse(this.props.location.search);\n    this.state = {\n      result: null,\n      prevPage: null,\n      nextPage: null,\n      pageList: [],\n      boards: [],\n      page: query.page,\n      size: query.size,\n      type: query.type,\n      keyword: query.keyword\n    };\n  }\n\n  componentDidMount() {\n    this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"WebBoard List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.onClickRegister();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bno\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Wirter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Regdate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Updatedate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.boards.map(board => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.bno\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  this.onClickView(board.bno);\n                },\n                style: {\n                  cursor: 'pointer'\n                },\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.writer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.regdate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: board.updatedate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)]\n            }, board.bno, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"searchType\",\n            onChange: this.onChangeType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"t\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"w\",\n              children: \"Writer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"c\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.onChangeKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onClickSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\n          /* PREV 버튼 */\n          this.state.prevPage === null ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(this.state.prevPage.pageNumber + 1);\n              },\n              children: [\"PREV \", this.state.prevPage.pageNumber + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 61\n          }, this),\n          /* 페이지 번호 버튼 */\n          this.state.pageList.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: this.state.result.currentPageNum - 1 === page.pageNumber ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(page.pageNumber + 1);\n              },\n              style: {\n                color: \"red\"\n              },\n              children: page.pageNumber + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 69\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(page.pageNumber + 1);\n              },\n              children: page.pageNumber + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 69\n            }, this)\n          }, page.pageNumber + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 57\n          }, this)),\n          /* NEXT 버튼 */\n          this.state.nextPage === null ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.onChangePage(this.state.nextPage.pageNumber + 1);\n              },\n              children: [\"NEXT \", this.state.nextPage.pageNumber + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WebBoardListComponent;","map":{"version":3,"sources":["C:/Users/qkdlf/Study/SpringBoot/front-end/boot06/src/component/webBoard/WebBoardListComponent.jsx"],"names":["React","Component","ApiService","queryStirng","WebBoardListComponent","constructor","props","reloadWebBoardList","page","size","type","keyword","fetchWebBoards","then","res","setState","result","data","prevPage","nextPage","pageList","boards","content","catch","err","console","log","onChangePage","p","state","onChangeType","e","target","value","onChangeKeyword","onClickSearch","onClickRegister","history","push","onClickView","bno","query","parse","location","search","componentDidMount","render","map","board","cursor","title","writer","regdate","updatedate","pageNumber","currentPageNum","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;;AAEA,MAAMC,qBAAN,SAAoCH,SAApC,CAA6C;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAuBlBC,kBAvBkB,GAuBG,CAACC,IAAI,GAAC,CAAN,EAASC,IAAI,GAAC,EAAd,EAAkBC,IAAI,GAAC,EAAvB,EAA2BC,OAAO,GAAC,EAAnC,KAAwC;AACzDT,MAAAA,UAAU,CAACU,cAAX,CAA0BJ,IAA1B,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,OAA5C,EACaE,IADb,CACkBC,GAAG,IAAE;AACP,aAAKC,QAAL,CAAc;AACEC,UAAAA,MAAM,EAAGF,GAAG,CAACG,IADf;AAEEC,UAAAA,QAAQ,EAAGJ,GAAG,CAACG,IAAJ,CAASC,QAFtB;AAGEC,UAAAA,QAAQ,EAAGL,GAAG,CAACG,IAAJ,CAASE,QAHtB;AAIEC,UAAAA,QAAQ,EAAGN,GAAG,CAACG,IAAJ,CAASG,QAJtB;AAKEC,UAAAA,MAAM,EAACP,GAAG,CAACG,IAAJ,CAASD,MAAT,CAAgBM;AALzB,SAAd;AAOH,OATb,EAUaC,KAVb,CAUmBC,GAAG,IAAE;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0CF,GAA1C;AAAgD,OAVzE;AAYH,KApCiB;;AAAA,SAsClBG,YAtCkB,GAsCFC,CAAD,IAAK;AAChB,WAAKb,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAGoB;AAAR,OAAd;AACA,WAAKrB,kBAAL,CAAwBqB,CAAxB,EAA0B,KAAKC,KAAL,CAAWpB,IAArC,EAA2C,KAAKoB,KAAL,CAAWnB,IAAtD,EAA4D,KAAKmB,KAAL,CAAWlB,OAAvE;AACH,KAzCiB;;AAAA,SA0ClBmB,YA1CkB,GA0CFC,CAAD,IAAK;AAChB,WAAKhB,QAAL,CAAc;AAACL,QAAAA,IAAI,EAAGqB,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AACH,KA5CiB;;AAAA,SA6ClBC,eA7CkB,GA6CCH,CAAD,IAAK;AACnB,WAAKhB,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAGoB,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd;AACH,KA/CiB;;AAAA,SAgDlBE,aAhDkB,GAgDF,MAAI;AAChB,WAAK5B,kBAAL,CAAwB,KAAKsB,KAAL,CAAWrB,IAAnC,EAAyC,KAAKqB,KAAL,CAAWpB,IAApD,EAA0D,KAAKoB,KAAL,CAAWnB,IAArE,EAA2E,KAAKmB,KAAL,CAAWlB,OAAtF;AACH,KAlDiB;;AAAA,SAoDlByB,eApDkB,GAoDA,MAAI;AAClB,WAAK9B,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB;AACH,KAtDiB;;AAAA,SAwDlBC,WAxDkB,GAwDHC,GAAD,IAAO;AACjB,WAAKlC,KAAL,CAAW+B,OAAX,CAAmBC,IAAnB,CAAwB,iBACA,QADA,GACS,KAAKT,KAAL,CAAWrB,IADpB,GAEA,QAFA,GAES,KAAKqB,KAAL,CAAWpB,IAFpB,GAGA,QAHA,GAGS,KAAKoB,KAAL,CAAWnB,IAHpB,GAIA,WAJA,GAIY,KAAKmB,KAAL,CAAWlB,OAJvB,GAKA,OALA,GAKQ6B,GALhC;AAMH,KA/DiB;;AAGd,UAAMC,KAAK,GAAGtC,WAAW,CAACuC,KAAZ,CAAkB,KAAKpC,KAAL,CAAWqC,QAAX,CAAoBC,MAAtC,CAAd;AAEA,SAAKf,KAAL,GAAa;AACTb,MAAAA,MAAM,EAAG,IADA;AAETE,MAAAA,QAAQ,EAAG,IAFF;AAGTC,MAAAA,QAAQ,EAAG,IAHF;AAITC,MAAAA,QAAQ,EAAG,EAJF;AAKTC,MAAAA,MAAM,EAAG,EALA;AAMTb,MAAAA,IAAI,EAAGiC,KAAK,CAACjC,IANJ;AAOTC,MAAAA,IAAI,EAAGgC,KAAK,CAAChC,IAPJ;AAQTC,MAAAA,IAAI,EAAG+B,KAAK,CAAC/B,IARJ;AASTC,MAAAA,OAAO,EAAG8B,KAAK,CAAC9B;AATP,KAAb;AAYH;;AAEDkC,EAAAA,iBAAiB,GAAE;AACf,SAAKtC,kBAAL,CAAwB,KAAKsB,KAAL,CAAWrB,IAAnC,EAAyC,KAAKqB,KAAL,CAAWpB,IAApD,EAA0D,KAAKoB,KAAL,CAAWnB,IAArE,EAA2E,KAAKmB,KAAL,CAAWlB,OAAtF;AACH;;AA4CDmC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAI;AAAC,mBAAKV,eAAL;AAAuB,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI;AAAA,sBAEQ,KAAKP,KAAL,CAAWR,MAAX,CAAkB0B,GAAlB,CAAuBC,KAAK,iBACpB;AAAA,sCACI;AAAA,0BAAKA,KAAK,CAACR;AAAX;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,OAAO,EAAE,MAAI;AAAC,uBAAKD,WAAL,CAAiBS,KAAK,CAACR,GAAvB;AAA4B,iBAA9C;AAAgD,gBAAA,KAAK,EAAE;AAACS,kBAAAA,MAAM,EAAC;AAAR,iBAAvD;AAAA,0BAA4ED,KAAK,CAACE;AAAlF;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,0BAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAKH,KAAK,CAAC1B;AAAX;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA,0BAAK0B,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA,eAASL,KAAK,CAACR,GAAf;AAAA;AAAA;AAAA;AAAA,oBADR;AAFR;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAiCI;AAAA,kCACI;AAAQ,YAAA,IAAI,EAAC,YAAb;AAA0B,YAAA,QAAQ,EAAE,KAAKV,YAAzC;AAAA,oCACI;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAKI;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAQ,YAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eA6CA;AAAA,+BAEI;AAAA;AAEQ;AACA,eAAKN,KAAL,CAAWX,QAAX,KAAsB,IAAtB,GAA6B,IAA7B,gBAAoC;AAAA,mCAAI;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAKS,YAAL,CAAkB,KAAKE,KAAL,CAAWX,QAAX,CAAoBoC,UAApB,GAA+B,CAAjD;AAAoD,eAA1E;AAAA,kCAAkF,KAAKzB,KAAL,CAAWX,QAAX,CAAoBoC,UAApB,GAA+B,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAH5C;AAMQ;AACA,eAAKzB,KAAL,CAAWT,QAAX,CAAoB2B,GAApB,CAAwBvC,IAAI,iBACI;AAAA,sBAEQ,KAAKqB,KAAL,CAAWb,MAAX,CAAkBuC,cAAlB,GAAiC,CAAjC,KAAqC/C,IAAI,CAAC8C,UAA1C,gBACI;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAK3B,YAAL,CAAkBnB,IAAI,CAAC8C,UAAL,GAAgB,CAAlC;AAAqC,eAA3D;AAA6D,cAAA,KAAK,EAAE;AAACE,gBAAAA,KAAK,EAAC;AAAP,eAApE;AAAA,wBAAoFhD,IAAI,CAAC8C,UAAL,GAAgB;AAApG;AAAA;AAAA;AAAA;AAAA,oBADJ,gBAGI;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAK3B,YAAL,CAAkBnB,IAAI,CAAC8C,UAAL,GAAgB,CAAlC;AAAqC,eAA3D;AAAA,wBAA8D9C,IAAI,CAAC8C,UAAL,GAAgB;AAA9E;AAAA;AAAA;AAAA;AAAA;AALZ,aAAS9C,IAAI,CAAC8C,UAAL,GAAgB,CAAzB;AAAA;AAAA;AAAA;AAAA,kBADhC,CAPR;AAqBQ;AACA,eAAKzB,KAAL,CAAWV,QAAX,KAAsB,IAAtB,GAA6B,IAA7B,gBAAoC;AAAA,mCAAI;AAAQ,cAAA,OAAO,EAAE,MAAI;AAAC,qBAAKQ,YAAL,CAAkB,KAAKE,KAAL,CAAWV,QAAX,CAAoBmC,UAApB,GAA+B,CAAjD;AAAoD,eAA1E;AAAA,kCAAkF,KAAKzB,KAAL,CAAWV,QAAX,CAAoBmC,UAApB,GAA+B,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAtB5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cA7CA;AAAA,oBADJ;AA6EH;;AAhJwC;;AAmJ7C,eAAelD,qBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport ApiService from \"../../ApiService\";\r\nimport queryStirng from 'query-string';\r\n\r\nclass WebBoardListComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const query = queryStirng.parse(this.props.location.search);\r\n        \r\n        this.state = {\r\n            result : null,      \r\n            prevPage : null,\r\n            nextPage : null,\r\n            pageList : [],\r\n            boards : [],\r\n            page : query.page,\r\n            size : query.size,\r\n            type : query.type,\r\n            keyword : query.keyword\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n\r\n    reloadWebBoardList = (page=1, size=10, type=\"\", keyword=\"\")=>{\r\n        ApiService.fetchWebBoards(page, size, type, keyword)\r\n                    .then(res=>{\r\n                        this.setState({\r\n                                        result : res.data,\r\n                                        prevPage : res.data.prevPage,\r\n                                        nextPage : res.data.nextPage,\r\n                                        pageList : res.data.pageList,\r\n                                        boards:res.data.result.content\r\n                                    })\r\n                    })\r\n                    .catch(err=>{console.log(\"reloadWebBoardList() Error!\",err);});\r\n        \r\n    }\r\n\r\n    onChangePage = (p)=>{\r\n        this.setState({page : p});\r\n        this.reloadWebBoardList(p,this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n    onChangeType = (e)=>{\r\n        this.setState({type : e.target.value});\r\n    }\r\n    onChangeKeyword = (e)=>{\r\n        this.setState({keyword : e.target.value});\r\n    }\r\n    onClickSearch = ()=>{\r\n        this.reloadWebBoardList(this.state.page, this.state.size, this.state.type, this.state.keyword);\r\n    }\r\n\r\n    onClickRegister = ()=>{\r\n        this.props.history.push(\"/boards/register\");\r\n    }\r\n\r\n    onClickView = (bno)=>{\r\n        this.props.history.push(\"/boards/view\"+\r\n                                \"?page=\"+this.state.page+\r\n                                \"&size=\"+this.state.size+\r\n                                \"&type=\"+this.state.type+\r\n                                \"&keyword=\"+this.state.keyword+\r\n                                \"&bno=\"+bno);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <h2>WebBoard List</h2>\r\n                <div>\r\n                    <button onClick={()=>{this.onClickRegister()}}>Register</button>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Bno</th>\r\n                            <th>Title</th>\r\n                            <th>Wirter</th>\r\n                            <th>Content</th>\r\n                            <th>Regdate</th>\r\n                            <th>Updatedate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.boards.map( board=>\r\n                                    <tr key={board.bno}>\r\n                                        <td>{board.bno}</td>\r\n                                        <td onClick={()=>{this.onClickView(board.bno)}} style={{cursor:'pointer'}}>{board.title}</td>\r\n                                        <td>{board.writer}</td>\r\n                                        <td>{board.content}</td>\r\n                                        <td>{board.regdate}</td>\r\n                                        <td>{board.updatedate}</td>\r\n                                    </tr>\r\n                                )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* search */}\r\n                <div>\r\n                    <select name=\"searchType\" onChange={this.onChangeType}>\r\n                        <option value=\"\">--</option>\r\n                        <option value='t'>Title</option>\r\n                        <option value='w'>Writer</option>\r\n                        <option value='c'>Content</option>\r\n                    </select>\r\n                    <input type=\"text\" onChange={this.onChangeKeyword}/>\r\n                    <button onClick={this.onClickSearch}>Search</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {/* pagination */}\r\n                <ul>                 \r\n                    {\r\n                        /* PREV 버튼 */\r\n                        this.state.prevPage===null ? null : <li><button onClick={()=>{this.onChangePage(this.state.prevPage.pageNumber+1)}}>PREV {this.state.prevPage.pageNumber+1}</button></li>\r\n                    }\r\n                    {\r\n                        /* 페이지 번호 버튼 */\r\n                        this.state.pageList.map(page =>\r\n                                                        <li key={page.pageNumber+1}>\r\n                                                            {\r\n                                                                this.state.result.currentPageNum-1===page.pageNumber ? \r\n                                                                    <button onClick={()=>{this.onChangePage(page.pageNumber+1)}} style={{color:\"red\"}}>{page.pageNumber+1}</button>\r\n                                                                    :\r\n                                                                    <button onClick={()=>{this.onChangePage(page.pageNumber+1)}}>{page.pageNumber+1}</button>\r\n                                                                    \r\n                                                            }\r\n                                                        </li> \r\n                                                        \r\n                                                )\r\n                    }\r\n                    {\r\n                        /* NEXT 버튼 */\r\n                        this.state.nextPage===null ? null : <li><button onClick={()=>{this.onChangePage(this.state.nextPage.pageNumber+1)}}>NEXT {this.state.nextPage.pageNumber+1}</button></li>\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WebBoardListComponent;"]},"metadata":{},"sourceType":"module"}