package org.zerock;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;
import java.util.Optional;
import java.util.stream.IntStream;

import javax.transaction.Transactional;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.Commit;
import org.zerock.domain.FreeBoard;
import org.zerock.domain.FreeBoardReply;
import org.zerock.persistence.FreeBoardReplyRepository;
import org.zerock.persistence.FreeBoardRepository;

import lombok.extern.java.Log;

@SpringBootTest
@Log
@Commit
class FreeBoardTests {
	@Autowired
	FreeBoardRepository boardRepo;
	
	@Autowired
	FreeBoardReplyRepository replyRepo;

	// 게시물 샘플 데이터 생성
	@Disabled
	@Test
	public void insertDummy() {
		IntStream.range(1, 200).forEach(i->{
			FreeBoard board = new FreeBoard();
			
			board.setTitle("Free Board..." +i);
			board.setContent("Free Content..."+i);
			board.setWriter("user"+i%10);
			
			boardRepo.save(board);
		});
	}
	
	// 양방향으로 FreeBoard 객체 얻어온 후 FreeBoardReply를
	// 댓글 리스트에 추가한 후에 FreeBoard 자체를 저장하는 방식
	@Transactional
	@Test
	public void insertReply2Way() {
		Optional<FreeBoard> result = boardRepo.findById(199L);
		
		result.ifPresent(board ->{
			List<FreeBoardReply> replies = board.getReplies();
			
		});
	}
}
